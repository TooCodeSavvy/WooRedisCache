name: Create Archive and Release

on:
  push:
    tags:
      - '*'
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Zorg ervoor dat alle tags en branches worden opgehaald

      - name: Install zip
        run: sudo apt-get install zip

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'WooRedisCache.zip'
          directory: 'wp-content/plugins/CustomWooCommerceRedis'
          path: '.'
          exclusions: 'tests/* phpunit.xml test-results/* *.phpunit.result.cache *.phpunit.cache'

      - name: Bepaal en creëer nieuwe tag
        id: new_tag
        run: |
          # Controleer of er tags bestaan
          if git fetch --tags && git tag | grep -q .; then
            LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Laatste tag: $LAST_TAG"
            NEW_TAG="v$(echo $LAST_TAG | sed 's/v//' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
          else
            echo "Geen bestaande tags gevonden. Creëer initiële tag."
            NEW_TAG="v0.1.0"
          fi
          
          echo "Nieuwe tag: $NEW_TAG"
          
          # Creëer de nieuwe tag
          git tag $NEW_TAG
          git push origin $NEW_TAG
          
          # Zet de nieuwe tag als output
          echo "::set-output name=tag::$NEW_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "WooRedisCache.zip"
          tag: ${{ steps.new_tag.outputs.tag }} # Gebruik de tag die is gegenereerd in de vorige stap
          token: ${{ secrets.GITHUB_TOKEN }} # Vervang door je persoonlijke toegangstoken
