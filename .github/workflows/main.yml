name: Release WooCommerce Redis Plugin

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write  # Only if you need to manage issues
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Zorg ervoor dat alle tags en branches worden opgehaald

      - name: Install zip
        run: sudo apt-get install zip

      - name: Create zip file
        run: |
          cd wp-content/plugins
          zip -r WooRedisCache.zip CustomWooCommerceRedis -x "CustomWooCommerceRedis/tests/*" -x "CustomWooCommerceRedis/phpunit.xml" -x "CustomWooCommerceRedis/test-results/*" -x "CustomWooCommerceRedis/*.phpunit.result.cache" -x "CustomWooCommerceRedis/*.phpunit.cache"
        shell: /usr/bin/bash -e {0}
        
      - name: Bepaal en creëer nieuwe tag
        id: new_tag
        run: |
          # Controleer of er tags bestaan
          if git fetch --tags && git tag | grep -q .; then
            LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Laatste tag: $LAST_TAG"
            NEW_TAG="v$(echo $LAST_TAG | sed 's/v//' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
          else
            echo "Geen bestaande tags gevonden. Creëer initiële tag."
            NEW_TAG="v0.1.0"
          fi
          
          echo "Nieuwe tag: $NEW_TAG"
          
          # Creëer de nieuwe tag
          git tag $NEW_TAG
          git push origin $NEW_TAG
          
          # Zet de nieuwe tag als output
          echo "::set-output name=tag::$NEW_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ steps.new_tag.outputs.tag }}
            release_name: Release ${{ steps.new_tag.outputs.tag }}
            draft: false
            prerelease: false
